// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:

		DMux4Way(in=load,sel=address[13..14],a=ram,b=rom,c=scrn,d=keybd);
	
		Or(a=ram,b=rom,out=rr);
	
    	//For the Memory we need ram16k only using the bits 0 - 13 the other 3 bits are not needed because 
		//the instruction structure 111 a c1 c2 c3 c4 c5 c6 d1 d2 d3 j1 j2 j3 the bits 111 the msb means 
		//the type of the instruction 0 for type A and 1 for type C but we only need the address
		RAM16K(in=in,load=rr,address=address[0..13],out=outRam);
		
		Screen(in=in,load=scrn,address=address[0..12],out=scrnOut);
		
		Keyboard(out=kyb);
	
		Mux4Way16(a=outRam,b=outRam,c=scrnOut,d=kyb,sel=address[13..14],out=out);

}